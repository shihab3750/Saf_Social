{"ast":null,"code":"var _jsxFileName = \"/Users/safin/Learning/React-FullStack/client/src/pages/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    authState\n  } = useContext(AuthContext);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then(response => {\n      setPostObject(response.data);\n    });\n    axios.get(`http://localhost:3001/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n  }, []);\n\n  const addComment = () => {\n    axios.post(\"http://localhost:3001/comments\", {\n      commentBody: newComment,\n      PostId: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        console.log(response.data.error);\n      } else {\n        const commentToAdd = {\n          commentBody: newComment,\n          username: response.data.username\n        };\n        setComments([...comments, commentToAdd]);\n        setNewComment(\"\");\n      }\n    });\n  };\n\n  const deleteComment = id => {\n    axios.delete(`http://localhost:3001/comments/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      setComments(comments.filter(val => {\n        return val.id !== id;\n      }));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        id: \"individual\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: [\" \", postObject.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: postObject.postText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: postObject.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Comment...\",\n          autoComplete: \"off\",\n          value: newComment,\n          onChange: event => {\n            setNewComment(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \" Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listOfComments\",\n        children: comments.map((comment, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [comment.commentBody, /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" Username: \", comment.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), authState.username === comment.username && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                deleteComment(comment.id);\n              },\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"uApQKjtJMaJ0rUtQ058ZjaFRt4A=\", false, function () {\n  return [useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","axios","AuthContext","Post","id","postObject","setPostObject","comments","setComments","newComment","setNewComment","authState","get","then","response","data","addComment","post","commentBody","PostId","headers","accessToken","localStorage","getItem","error","console","log","commentToAdd","username","deleteComment","delete","filter","val","title","postText","event","target","value","map","comment","key"],"sources":["/Users/safin/Learning/React-FullStack/client/src/pages/Post.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../helpers/AuthContext\";\n\nfunction Post() {\n  let { id } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const { authState } = useContext(AuthContext);\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then((response) => {\n      setPostObject(response.data);\n    });\n\n    axios.get(`http://localhost:3001/comments/${id}`).then((response) => {\n      setComments(response.data);\n    });\n  }, []);\n\n  const addComment = () => {\n    axios\n      .post(\n        \"http://localhost:3001/comments\",\n        {\n          commentBody: newComment,\n          PostId: id,\n        },\n        {\n          headers: {\n            accessToken: localStorage.getItem(\"accessToken\"),\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.error) {\n          console.log(response.data.error);\n        } else {\n          const commentToAdd = {\n            commentBody: newComment,\n            username: response.data.username,\n          };\n          setComments([...comments, commentToAdd]);\n          setNewComment(\"\");\n        }\n      });\n  };\n\n  const deleteComment = (id) => {\n    axios.delete(`http://localhost:3001/comments/${id}`, {\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\n      })\n      .then(() => {\n        setComments(\n          comments.filter((val) => {\n            return val.id !== id;\n          })\n        );\n      });\n  };\n\n  return (\n    <div className=\"postPage\">\n      <div className=\"leftSide\">\n        <div className=\"post\" id=\"individual\">\n          <div className=\"title\"> {postObject.title} </div>\n          <div className=\"body\">{postObject.postText}</div>\n          <div className=\"footer\">{postObject.username}</div>\n        </div>\n      </div>\n      <div className=\"rightSide\">\n        <div className=\"addCommentContainer\">\n          <input\n            type=\"text\"\n            placeholder=\"Comment...\"\n            autoComplete=\"off\"\n            value={newComment}\n            onChange={(event) => {\n              setNewComment(event.target.value);\n            }}\n          />\n          <button onClick={addComment}> Add Comment</button>\n        </div>\n        <div className=\"listOfComments\">\n          {comments.map((comment, key) => {\n            return (\n              <div key={key} className=\"comment\">\n                {comment.commentBody}\n                <label> Username: {comment.username}</label>\n                {authState.username === comment.username && (\n                  <button\n                    onClick={() => {\n                      deleteComment(comment.id);\n                    }}\n                  >\n                    X\n                  </button>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;"],"mappings":"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"},"metadata":{},"sourceType":"module"}